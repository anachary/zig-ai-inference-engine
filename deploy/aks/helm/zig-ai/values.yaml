# Default values for zig-ai
# This is a YAML-formatted file.

global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: "default"
  
# Coordinator configuration
coordinator:
  enabled: true
  replicas: 1
  
  image:
    registry: ""
    repository: "zig-ai/coordinator"
    tag: "latest"
    pullPolicy: IfNotPresent
  
  resources:
    requests:
      memory: "4Gi"
      cpu: "2"
    limits:
      memory: "8Gi"
      cpu: "4"
  
  service:
    type: LoadBalancer
    port: 8080
    targetPort: 8080
    annotations: {}
  
  config:
    logLevel: "info"
    maxConnections: 1000
    healthCheckInterval: "5s"
    shardsCount: 4
    replicationFactor: 1
    failoverTimeout: "30s"
  
  nodeSelector: {}
  tolerations: []
  affinity: {}
  
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}

# Shard configuration
shard:
  enabled: true
  replicas: 4
  
  image:
    registry: ""
    repository: "zig-ai/shard"
    tag: "latest"
    pullPolicy: IfNotPresent
  
  resources:
    requests:
      memory: "16Gi"
      cpu: "8"
      nvidia.com/gpu: 0
    limits:
      memory: "32Gi"
      cpu: "16"
      nvidia.com/gpu: 1
  
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  
  config:
    logLevel: "info"
    maxMemoryGb: 32
    workerThreads: 16
    enableGpu: true
    healthCheckInterval: "10s"
    timeout: "30s"
  
  # GPU node selector
  nodeSelector:
    accelerator: nvidia-tesla-v100
  
  tolerations:
    - key: nvidia.com/gpu
      operator: Exists
      effect: NoSchedule
  
  # Anti-affinity to spread shards across nodes
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - zig-ai-shard
          topologyKey: kubernetes.io/hostname
  
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}

# Storage configuration
storage:
  enabled: true
  
  # Model storage (shared across all pods)
  modelStorage:
    enabled: true
    storageClass: "azurefile-premium"
    accessMode: ReadWriteMany
    size: "1Ti"
    annotations: {}
  
  # Shard-specific storage
  shardStorage:
    enabled: true
    storageClass: "managed-premium"
    accessMode: ReadWriteOnce
    size: "500Gi"
    annotations: {}

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 16
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  
  # Custom metrics
  customMetrics:
    enabled: false
    metrics:
    - type: Pods
      pods:
        metric:
          name: inference_requests_per_second
        target:
          type: AverageValue
          averageValue: "10"

# Monitoring configuration
monitoring:
  enabled: true
  
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    labels: {}
  
  prometheus:
    enabled: false
    
  grafana:
    enabled: false
    dashboards:
      enabled: true

# Network policies
networkPolicy:
  enabled: false
  ingress:
    enabled: true
    from: []
  egress:
    enabled: true
    to: []

# Security configuration
security:
  podSecurityPolicy:
    enabled: false
  
  rbac:
    enabled: true
    
  serviceAccount:
    create: true
    annotations: {}
    name: ""

# Azure-specific configuration
azure:
  # Azure Container Registry
  acr:
    enabled: false
    name: ""
    
  # Azure Key Vault
  keyVault:
    enabled: false
    name: ""
    tenantId: ""
    
  # Azure Storage
  storage:
    enabled: false
    accountName: ""
    containerName: "models"
    
  # Azure Monitor
  monitor:
    enabled: false
    workspaceId: ""

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: zig-ai.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# ConfigMap and Secret configuration
configMaps:
  coordinator: {}
  shard: {}

secrets:
  coordinator: {}
  shard: {}

# Additional labels and annotations
commonLabels: {}
commonAnnotations: {}

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  maxUnavailable: ""

# Init containers
initContainers: []

# Sidecar containers
sidecars: []

# Extra volumes
extraVolumes: []

# Extra volume mounts
extraVolumeMounts: []
