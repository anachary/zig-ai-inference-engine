# Multi-stage build for IoT ARM64 devices
FROM arm64v8/python:3.9-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    libopenblas-dev \
    liblapack-dev \
    libatlas-base-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements and install Python dependencies
COPY requirements-iot.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements-iot.txt

# Production stage
FROM arm64v8/python:3.9-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libopenblas0 \
    libgomp1 \
    libjpeg62-turbo \
    libpng16-16 \
    libavcodec58 \
    libavformat58 \
    libswscale5 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Create app directory and user
RUN groupadd -r zig-ai && useradd -r -g zig-ai zig-ai
WORKDIR /app
RUN chown -R zig-ai:zig-ai /app

# Copy application code
COPY src/iot/ ./src/
COPY config/iot-default.yaml ./config/
COPY scripts/iot/ ./scripts/

# Create directories for models and logs
RUN mkdir -p models logs cache && \
    chown -R zig-ai:zig-ai models logs cache

# Set environment variables for IoT optimization
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV OMP_NUM_THREADS=4
ENV MALLOC_ARENA_MAX=2
ENV MALLOC_MMAP_THRESHOLD_=131072
ENV MALLOC_TRIM_THRESHOLD_=131072

# IoT-specific environment variables
ENV ZIG_AI_MODE=iot
ENV ZIG_AI_DEVICE_TYPE=arm64
ENV ZIG_AI_LOG_LEVEL=info
ENV ZIG_AI_MAX_MEMORY_MB=512
ENV ZIG_AI_THREADS=4
ENV ZIG_AI_OPTIMIZATION_LEVEL=3
ENV ZIG_AI_ENABLE_GPU=false

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Switch to non-root user
USER zig-ai

# Expose port
EXPOSE 8080

# Start the IoT inference server
CMD ["python", "src/iot_inference_server.py"]
